
let appState = {
  currentState: 'registration',
  userId: null,
  userNickname: '',
  points: null,
};

// const ADMIN_IDS = [707309709, 1046929828]; 

const tg = window.Telegram?.WebApp;
tg?.expand();
const telegramUser = tg?.initDataUnsafe?.user;
const telegramId = telegramUser?.id;

const registrationForm = document.getElementById("registration-form");
const nicknameInput = document.getElementById("nickname-input");
const registrationError = document.getElementById("registration-error");

registrationForm.addEventListener("submit", async (e) => {
  e.preventDefault();
  const nickname = nicknameInput.value.trim();
  if (!nickname) return;

  try {
    registrationError.classList.add("hidden");
    console.log("üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...");
    const userData = await ApiClient.registerOrGetUser(telegramId, nickname);
    appState.userId=userData.userId;
    appState.userNickname=userData.nickname;
    appState.points=userData.points;
    console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à—ë–ª:", appState);
    showState('waiting');
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", err);
    registrationError.textContent = err.message;
    registrationError.classList.remove("hidden");
  }
});


function showState(state) {
  // 1. –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
  document.querySelectorAll(".state").forEach(s => s.classList.add("hidden"));
  
  // 2. –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç (—ç–∫—Ä–∞–Ω) –ø–æ id, –Ω–∞–ø—Ä–∏–º–µ—Ä state-registration, state-admin, state-waiting
  const el = document.getElementById(`state-${state}`);
  if (el) el.classList.remove("hidden");

  // 3. –ò—â–µ–º –≤–Ω—É—Ç—Ä–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö id –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ "nickname"
  const nicknameElements = el.querySelectorAll("[id$='nickname']");
  nicknameElements.forEach(elm => {
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–∏—Ö nickname –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    elm.textContent = appState.userNickname;
  });
  
  // 4. –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  appState.currentState = state;
}

function shuffle(array) {
  for (let i = array.length -1; i>0; i--) {
    const j = Math.floor(Math.random() * (i+1));
    [array [i], array[j]] = [array[j], array[i]];
  }
  return array;
}


let gameTimer = null;


// ----------------- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Ñ–∞–∑–µ —Å–æ–±—ã—Ç–∏—è -----------------
async function finishGamePhase() {
  try {
    const events = await ApiClient.listEvents();
    let phase= await ApiClient.getEventStatus();
    if (phase.game_status === "finished") {
      showState("finished");
    } else if (phase.game_status === "registration") {
      showState("registration");
    } else {
      showState("waiting-results");
    }
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ–∞–∑—ã:", e);
    document.getElementById("admin-notification").textContent = "–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ–∞–∑—ã: " + e.message;
  }
}

let questionIndex = 0;
let questions = [];
let intervalId = null;

// ----------------- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏ —Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã -----------------
async function checkAndStartGame() {
  try {
    const events = await ApiClient.listEvents();
    if (!events.length) return showState("waiting");

    const event = events.reduce((a,b) => a.id > b.id ? a : b);
    const eventStatus = await ApiClient.getEventStatus(event.id);

    const quizzes = await ApiClient.listQuizzes();
    const activeQuiz = quizzes.find(q => q.status ==="started");

    
    if (eventStatus.game_status === "started" && activeQuiz) {
      showState("game");

      questions = shuffle(await ApiClient.listQuestions(activeQuiz.id));
      questionIndex = 0;
      nextQuestion();
      
    } else {
      showState("waiting");
    }
  } catch (e) {
    console.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã:", e);
    document.getElementById("admin-notification").textContent = "–û—à–∏–±–∫–∞: " + e.message;
  }
}

function nextQuestion() {
  if (questionIndex >= questions.length) {
    clearTimeout(gameTimer);
    finishGamePhase(eventId);
    clearTimeout(gameTimer);
    clearInterval(intervalId);
    return;
  }

  const q = questions[questionIndex];
  document.getElementById("question-text").textContent = q.text;
  document.getElementById("current-q").textContent = questionIndex + 1;
  document.getElementById("total-qs").textContent = totalQuestions.length;

  let timer = 15;

  document.getElementById("question-timer").textContent = `00:${timer < 10 ? '0' + timer : timer}`;
  clearInterval(intervalId);

  intervalId = setInterval(() => {
    timer--;
    document.getElementById("question-timer").textContent = `00:${timer < 10 ? '0' + timer : timer}`;
    if (timer <= 0){
      clearInterval(intervalId);
      questionIndex++;
      nextQuestion();
    }
  }, 1000);
}

const defaultQuestions = [
  {
    id: 1,
    question: '–ö–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "–∫—Ä–∞—Å–Ω—ã–º" –∏–∑-–∑–∞ —Å–≤–æ–µ–π –æ–∫—Ä–∞—Å–∫–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è?',
    options: ['–í–æ–¥–æ—Ä–æ–¥', '–ñ–µ–ª–µ–∑–æ', '–ö–∏—Å–ª–æ—Ä–æ–¥', '–£—Ä–∞–Ω'],
    correctAnswer: '–ñ–µ–ª–µ–∑–æ',
  },
  {
    id: 2,
    question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–∏–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç—ã –∫ –ó–µ–º–ª–µ?',
    options: ['–ú–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ', '–ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è', '–¢—Ä–µ–Ω–∏–µ', '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Ç–æ–∫'],
    correctAnswer: '–ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è',
  },
  {
    id: 3,
    question: '–ö–∞–∫–æ–π –æ—Ä–≥–∞–Ω —á–µ–ª–æ–≤–µ–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–µ—Ä–µ–∫–∞—á–∫—É –∫—Ä–æ–≤–∏ –ø–æ –≤—Å–µ–º—É —Ç–µ–ª—É?',
    options: ['–õ–µ–≥–∫–∏–µ', '–ú–æ–∑–≥', '–ü–µ—á–µ–Ω—å', '–°–µ—Ä–¥—Ü–µ'],
    correctAnswer: '–°–µ—Ä–¥—Ü–µ',
  },
  {
    id: 4,
    question: '–ß—Ç–æ —Ç–∞–∫–æ–µ –º–æ–ª–µ–∫—É–ª–∞ –≤–æ–¥—ã?',
    options: [
      '–û–¥–∏–Ω –∞—Ç–æ–º –≤–æ–¥–æ—Ä–æ–¥–∞ –∏ –æ–¥–∏–Ω –∞—Ç–æ–º –∫–∏—Å–ª–æ—Ä–æ–¥–∞',
      '–î–≤–∞ –∞—Ç–æ–º–∞ –≤–æ–¥–æ—Ä–æ–¥–∞ –∏ –æ–¥–∏–Ω –∞—Ç–æ–º –∫–∏—Å–ª–æ—Ä–æ–¥–∞',
      '–û–¥–∏–Ω –∞—Ç–æ–º –≤–æ–¥–æ—Ä–æ–¥–∞ –∏ –¥–≤–∞ –∞—Ç–æ–º–∞ –∫–∏—Å–ª–æ—Ä–æ–¥–∞',
      '–î–≤–∞ –∞—Ç–æ–º–∞ –≤–æ–¥–æ—Ä–æ–¥–∞ –∏ –¥–≤–∞ –∞—Ç–æ–º–∞ –∫–∏—Å–ª–æ—Ä–æ–¥–∞',
    ],
    correctAnswer: '–î–≤–∞ –∞—Ç–æ–º–∞ –≤–æ–¥–æ—Ä–æ–¥–∞ –∏ –æ–¥–∏–Ω –∞—Ç–æ–º –∫–∏—Å–ª–æ—Ä–æ–¥–∞',
  },
  {
    id: 5,
    question: '–ö–∞–∫–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º—ã–º –∫—Ä—É–ø–Ω—ã–º –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–º –Ω–∞ –ó–µ–º–ª–µ?',
    options: ['–°–ª–æ–Ω', '–°–∏–Ω–∏–π –∫–∏—Ç', '–ë–µ–≥–µ–º–æ—Ç', '–ñ–∏—Ä–∞—Ñ'],
    correctAnswer: '–°–∏–Ω–∏–π –∫–∏—Ç',
  },
  {
    id: 6,
    question: '–í –∫–∞–∫–æ–º –≥–æ–¥—É —á–µ–ª–æ–≤–µ–∫ –≤–ø–µ—Ä–≤—ã–µ –≤—ã—Å–∞–¥–∏–ª—Å—è –Ω–∞ –õ—É–Ω–µ?',
    options: ['1959', '1969', '1979', '1989'],
    correctAnswer: '1969',
  },
  {
    id: 7,
    question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ —Ö–∏–º–∏—á–µ—Å–∫—É—é —ç–Ω–µ—Ä–≥–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏?',
    options: ['–î—ã—Ö–∞–Ω–∏–µ', '–§–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑', '–§–µ—Ä–º–µ–Ω—Ç–∞—Ü–∏—è', '–¢—Ä–∞–Ω—Å–ø–∏—Ä–∞—Ü–∏—è'],
    correctAnswer: '–§–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑',
  },
  {
    id: 8,
    question: '–ß—Ç–æ –∏–∑—É—á–∞–µ—Ç –Ω–∞—É–∫–∞ –≥–µ–æ–ª–æ–≥–∏—è?',
    options: [
      '–ó–≤–µ–∑–¥—ã –∏ –ø–ª–∞–Ω–µ—Ç—ã',
      '–ñ–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è',
      '–ó–µ–º–Ω—É—é –∫–æ—Ä—É, –µ–µ —Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∏—Å—Ç–æ—Ä–∏—é',
      '–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –æ—Ä–≥–∞–Ω–∏–∑–º',
    ],
    correctAnswer: '–ó–µ–º–Ω—É—é –∫–æ—Ä—É, –µ–µ —Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∏—Å—Ç–æ—Ä–∏—é',
  },
  {
    id: 9,
    question: '–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–∑–≤–µ—Å—Ç–Ω–∞ —Å–≤–æ–∏–º–∏ –∫–æ–ª—å—Ü–∞–º–∏?',
    options: ['–ú–∞—Ä—Å', '–Æ–ø–∏—Ç–µ—Ä', '–°–∞—Ç—É—Ä–Ω', '–ù–µ–ø—Ç—É–Ω'],
    correctAnswer: '–°–∞—Ç—É—Ä–Ω',
  },
  {
    id: 10,
    question: '–ö –∫–∞–∫–æ–π —Ñ–æ—Ä–º–µ –∂–∏–∑–Ω–∏ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ø–ª–µ—Å–µ–Ω—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞, —á—Ç–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Ö–ª–µ–±–µ?',
    options: ['–ë–∞–∫—Ç–µ—Ä–∏–∏', '–í–∏—Ä—É—Å—ã', '–ì—Ä–∏–±—ã', '–ü—Ä–æ—Å—Ç–µ–π—à–∏–µ'],
    correctAnswer: '–ì—Ä–∏–±—ã',
  },
];

function logout() {
  appState.userId = null;
  appState.userNickname = '';
  nicknameInput.value = '';
  showState('registration');
}


document.addEventListener("DOMContentLoaded", () => {
  setInterval(async () => {
    try {
      checkAndStartGame();
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã:", e);
    }
  }, 5000);
});
